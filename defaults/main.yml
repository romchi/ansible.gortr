---

GORTR:
  # string Bind address
  - bind: "0.0.0.0:8282"
  # string URL of the cached JSON data (default "https://rpki.cloudflare.com/rpki.json")
  - cache: ""
  #  bool Check if file is still valid
  - checktime: "true"
  # bool Enable Etag header
  - etag: "true"
  # string Export path
  - export.path: "/rpki.json"
  # string Sign export with key
  - export.sign: ""
  # string Log level
  - loglevel: "info"
  # int Max simultaneous connections
  - maxconn: 0
  # string  Metrics address
  - metrics.addr: "0.0.0.0:8080"
  # string Metrics path
  - metrics.path: "/metrics"
  # bool Send notifications to clients
  - notifications: "true"
  # int RTR protocol version 
  - protocol: 1
  # Refresh interval in seconds
  - refresh: 600
  # int Expire interval
  - rtr.expire: 7200
  # int Refresh interval
  - rtr.refresh: 3600
  # int  Retry interval
  - rtr.retry: 600
  # int Set session ID (if < 0: will be randomized)
  - rtr.sessionid: -1
  # string Slurm configuration file (filters and assertions)
  - slurm: ""
  # bool Refresh along the cache
  - slurm.refresh: "true"
  # bool Accept any SSH key
  - ssh.auth.key.bypass: "false"
  # string Authorized SSH key file (if blank, will use envvar GORTR_SSH_AUTHORIZEDKEYS
  - ssh.auth.key.file: ""
  # string SSH password (if blank, will use envvar GORTR_SSH_PASSWORD)
  - ssh.auth.password: ""
  # string SSH user
  - ssh.auth.user: "rpki"
  # string Bind address for SSH
  - ssh.bind: ""
  # string SSH host key (default "private.pem")
  - ssh.key: "private.pem"
  # bool Enable key auth
  - ssh.method.key: "false"
  # bool Enable password auth
  - ssh.method.password: "false"
  # string Bind address for TLS
  - tls.bind: ""
  # string Certificate path
  - tls.cert: ""
  # string Private key path
  - tls.key: ""
  # string User-Agent header
  - useragent: "Cloudflare-GoRTR (+https://github.com/cloudflare/gortr)"
  # string Use serial contained in file (disable, startup, full)
  - useserial: "disable"
  # bool Check signature using provided public key
  - verify: "false"
  # string Public key path (PEM file)
  - verify.key: ""
